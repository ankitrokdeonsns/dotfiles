"############ VUNDLE CONFIG BEGIN ##########
set nocompatible               " be iMproved
filetype off                   " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Plugin 'gmarik/vundle'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'ervandew/supertab'
Plugin 'altercation/vim-colors-solarized'
Plugin 'kien/ctrlp.vim'
"Plugin 'tpope/vim-fugitive'
Plugin 'rking/ag.vim'
Plugin 'vim-scripts/vim-auto-save'
Plugin 'bling/vim-airline'
Plugin 'vim-scripts/bufexplorer.zip'
Plugin 'eagletmt/ghcmod-vim'
Plugin 'eagletmt/neco-ghc'
Plugin 'Shuogo/vimproc.vim'
Plugin 'godlygeek/tabular'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'
Plugin 'xolox/vim-colorscheme-switcher'
Plugin 'xolox/vim-misc'
Plugin 'suan/vim-instant-markdown'

"Plugin 'panagosg7/vim-annotations'
"Plugin 'Lokaltog/vim-easymotion'
"Plugin 'elzr/vim-json'
"Plugin 'groovy.vim'
"Plugin 'rails.vim'
"Plugin 'kchmck/vim-coffee-script'
"Plugin 'scrooloose/nerdcommenter'
"Plugin 'airblade/vim-gitgutter.git'
"Plugin 'Valloric/YouCompleteMe'
"Plugin 'bling/vim-bufferline'
"Plugin 'panozzaj/vim-autocorrect'

filetype plugin indent on
"############# VUNDLE CONFIG END ##########

syntax enable
set background=light
set guifont=Droid\ Sans\ Mono\ for\ Powerline\ 12
"set guifont=Inconsolata-dz\ for\ Powerline\ 14
if has('gui_running')
  "colorscheme znake
  colorscheme nuvola
  "colorscheme desert
  "colorscheme abbott
  "colorscheme asu1dark
  "colorscheme atom
  "colorscheme babymate256
  "colorscheme badwolf
  "colorscheme desertink
  "colorscheme detailed
  "colorscheme earendel
  "colorscheme getafe
  "colorscheme hybrid_material
  "colorscheme literal_tango
  "colorscheme Tomorrow-Night
  "colorscheme xoria256
  "colorscheme zmrok
endif
set t_Co=256

let g:airline_theme='bubblegum'
let g:airline_powerline_fonts = 1
highlight Search ctermbg=Red guibg=Red
highlight ColorColumn ctermbg=DarkRed guibg=DarkRed
call matchadd('ColorColumn', '\%85v', 100)

set number
set ruler
set wildmenu
" Disable output and VCS files
set wildignore+=*.o,*.out,*.obj,.git,*.rbc,*.rbo,*.class,.svn,*.gem
" Disable archive files
set wildignore+=*.zip,*.tar.gz,*.tar.bz2,*.rar,*.tar.xz
" Disable temp and backup files
set wildignore+=*.swp,*~,._*
" Disable local cache files
set wildignore+=*/.bundle/*,*/.gradle/*,*/.vagrant/*

set cursorline
set ttyfast
set ignorecase
set smartcase
set incsearch
set showmatch
set hlsearch
set laststatus=2
set ts=2 sts=2 sw=2 expandtab
set autoindent
set smartindent
set smarttab
set backspace=indent,eol,start
set autoread
set hidden
set nopaste "supertab wont work if paste is set, enable only when required

"set list
set listchars=trail:.,
"set spell
set spelllang=en_us

nmap <Tab> >>
nmap <BS> <<
vmap <Tab> >gv
vmap <BS> <gv
nnoremap / /\v
vnoremap / /\v

let mapleader="\<Space>"
nnoremap <Leader>o :CtrlP<CR>
vmap <Leader>y "+y
vmap <Leader>d "+d
nmap <Leader>p "+p
nmap <Leader>P "+P
vmap <Leader>p "+p
vmap <Leader>P "+P
nmap <Leader>v V

nmap <Leader>h <C-w><C-h>
nmap <Leader>j <C-w><C-j>
nmap <Leader>k <C-w><C-k>
nmap <Leader>l <C-w><C-l>
nmap <Leader>l <C-w><C-l>
nmap <Leader>t <C-w><C-t>

nnoremap <Leader><Space> :noh<CR>
nnoremap ; :
map q: :q
" ==== NERD tree
" Open the project tree and expose current file in the nerdtree with Ctrl-\
nnoremap <silent> <Leader>nf :NERDTreeFind<CR>:vertical res 30<CR>
nmap <Leader>nt :NERDTreeToggle<CR>

au BufRead,BufNewFile Vagrantfile,RakeFile,*.rake  set filetype=ruby
au BufRead,BufNewFile *.groovy  set filetype=groovy
au BufRead,BufNewFile *.gradle set filetype=groovy
au BufRead,BufNewFile *.scss set ts=2 sts=2 sw=2
au BufRead,BufNewFile *.coffee set ts=2 sts=2 sw=2
au BufRead,BufNewFile *.haml set ts=2 sts=2 sw=2

let g:auto_save = 1
let g:vim_annotations_offset = '/.liquid/'
let g:syntastic_mode_map = { 'mode': 'active' }
let g:syntastic_haskell_checkers = ['hdevtools', 'hlint', 'liquid']

set foldmethod=indent
set foldnestmax=10
set nofoldenable
set foldlevel=1

" ================ Turn Off Swap Files ==============
set noswapfile
set nobackup
set nowb

" ================ Persistent Undo ==================
" Keep undo history across sessions, by storing in file.
" Only works all the time.
if has('persistent_undo')
  silent !mkdir ~/.vim/backups > /dev/null 2>&1
  set undodir=~/.vim/backups
  set undofile
endif

" ================ syntastic =================
map <Leader>s :SyntasticToggleMode<CR>

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0

" =============== ghc-mod ===================
map <silent> tw :GhcModTypeInsert<CR>
map <silent> ts :GhcModSplitFunCase<CR>
map <silent> tq :GhcModType<CR>
map <silent> te :GhcModTypeClear<CR>

" =============== tabularize ================
let g:haskell_tabular = 1

vmap a= :Tabularize /=<CR>
vmap a; :Tabularize /::<CR>
vmap a- :Tabularize /-><CR>
"vmap a\ :Tabularize /|<CR>

" =============== supertab ==================

" =============== vim-instant-markdown ==================
"let g:instant_markdown_slow = 1
"let g:instant_markdown_autostart = 0
"let g:instant_markdown_open_to_the_world = 1
"let g:instant_markdown_allow_unsafe_content = 1
"let g:instant_markdown_allow_external_content = 0
let g:instant_markdown_mathjax = 1
"let g:instant_markdown_logfile = '/tmp/instant_markdown.log'
"let g:instant_markdown_autoscroll = 0
let g:instant_markdown_port = 8888
let g:instant_markdown_python = 1


